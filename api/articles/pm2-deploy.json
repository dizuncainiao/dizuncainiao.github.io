{"title":"PM2 deploy","uid":"c8af577eb1799cd38418c5cf4bc0ffdc","slug":"pm2-deploy","date":"2021-12-23T07:47:51.000Z","updated":"2021-12-24T11:28:21.417Z","comments":true,"path":"api/articles/pm2-deploy.json","keywords":"帝尊菜鸟个人博客，帝尊菜鸟个人网站，web前端，JavaScript，CSS，HTML","cover":null,"content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p><a href=\"https://nuxtjs.org/\">Nuxt.js</a> 是一个基于 Vue.js 的轻量级应用框架,可用来创建服务端渲染 (SSR) 应用，本篇来讲一下 <strong>如何使用 PM2 部署 Nuxt 应用</strong>。</p>\n<h2 id=\"创建-Nuxt-应用\"><a href=\"#创建-Nuxt-应用\" class=\"headerlink\" title=\"创建 Nuxt 应用\"></a>创建 Nuxt 应用</h2><p>对于如何创建 Nuxt 应用，这里不作赘述，这里建议直接参考 <a href=\"https://nuxtjs.org/docs/2.x/get-started/installation\">官网</a> 的做法，使用 <code>create-nuxt-app</code> 就好，可以参照 <a href=\"https://github.com/nuxt/create-nuxt-app/blob/master/README.md#features-tada\">这里</a> 的说明来了解创建应用时的配置选项。</p>\n<p>创建成功后，查看 <strong>package.json</strong> 文件，发现 Nuxt 已内置多种预设命令：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n\t&quot;scripts&quot;: &#123;\n\t    &quot;dev&quot;: &quot;nuxt&quot;,\n\t    &quot;build&quot;: &quot;nuxt build&quot;,\n\t    &quot;start&quot;: &quot;nuxt start&quot;,\n\t    &quot;generate&quot;: &quot;nuxt generate&quot;,\n\t    &quot;lint:js&quot;: &quot;eslint --ext \\&quot;.js,.vue\\&quot; --ignore-path .gitignore .&quot;,\n\t    &quot;lint:style&quot;: &quot;stylelint \\&quot;**&#x2F;*.&#123;vue,css&#125;\\&quot; --ignore-path .gitignore&quot;,\n\t    &quot;prepare&quot;: &quot;husky install&quot;,\n\t    &quot;lint&quot;: &quot;yarn lint:js &amp;&amp; yarn lint:style&quot;\n\t&#125;\n&#125;</code></pre>\n\n<p>运行 <code>yarn build</code> 会打包 nuxt 应用并在根目录生成 <code>.nuxt</code> 目录，此时运行 <code>yarn start</code> 命令后访问 <a href=\"http://localhost:3000/\">http://localhost:3000/</a> 即可查看应用页面。</p>\n<h2 id=\"PM2-进程守护\"><a href=\"#PM2-进程守护\" class=\"headerlink\" title=\"PM2-进程守护\"></a>PM2-进程守护</h2><p>了解 NodeJS 的人都知道，通过 <em>CMD/PowerShell</em> 开启的 Node 服务，在关闭 <em>命令提示符</em> 窗口后，服务就断开了，页面也就访问不了。那么这如何解决呢？解决这个问题需要我们来了解一下 <a href=\"https://pm2.keymetrics.io/docs/usage/quick-start/\">PM2</a>：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>PM2 是一个守护进程管理器，它将帮助您管理和保持您的应用程序在线。</p></blockquote>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">npm install pm2@latest -g\n# or\nyarn global add pm2</code></pre>\n\n<p>运行上述命令完成 <em>pm2</em> 的安装，接下来在项目根目录创建一个 <font color='#0A7700'><em>ecosystem.config.js</em></font> 文件，内容如下：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">module.exports &#x3D; &#123;\n  apps: [\n    &#123;\n      name: &#39;NuxtAppName&#39;,\n      exec_mode: &#39;cluster&#39;,\n      instances: &#39;max&#39;, &#x2F;&#x2F; Or a number of instances\n      script: &#39;.&#x2F;node_modules&#x2F;nuxt&#x2F;bin&#x2F;nuxt.js&#39;,\n      args: &#39;start&#39;\n    &#125;\n  ]\n&#125;</code></pre>\n\n<p>好了，那么此时运行 <code>pm2 start</code> 后，你可以将任何 <em>命令提示符</em> 窗口关掉都可以访问 <a href=\"http://localhost:3000/\">http://localhost:3000/</a> 查看到应用页面，只要你不重启电脑。</p>\n<h2 id=\"pm2-windows-startup-服务器重启后自动恢复-pm2-进程\"><a href=\"#pm2-windows-startup-服务器重启后自动恢复-pm2-进程\" class=\"headerlink\" title=\"pm2-windows-startup-服务器重启后自动恢复 pm2 进程\"></a>pm2-windows-startup-服务器重启后自动恢复 pm2 进程</h2><p>依据上述内容，那么问题来了，电脑或服务器重启后，应用访问不了怎么办？实际的生产服务器中可能会有很多应用服务同时运行，总不能服务器宕机重启后一一手动敲命令重启服务吧。这里我们肯定想要在服务器重启后自动恢复应用服务（在 windows 系统中实践下），那么了解一下 <code>pm2-windows-startup</code> ：</p>\n<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">npm install pm2-windows-startup -g\n# or\nyarn global add pm2-windows-startup</code></pre>\n\n<h5 id=\"添加注册表项\"><a href=\"#添加注册表项\" class=\"headerlink\" title=\"添加注册表项\"></a>添加注册表项</h5><pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\">pm2-startup install</code></pre>\n\n<p><font color=red><strong>注意：第一次安装或重启时可能会被杀毒软件警告，允许即可。</strong></font></p>\n<h5 id=\"保存当前的进程列表\"><a href=\"#保存当前的进程列表\" class=\"headerlink\" title=\"保存当前的进程列表\"></a>保存当前的进程列表</h5><p>在使用 <code>pm2 start</code> 启动服务后，使用 <code>pm2 save</code> 即可保存当前的进程列表。在重启电脑后访问 <a href=\"http://localhost:3000/\">http://localhost:3000/</a> 依然可以看到应用页面。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://nuxtjs.org/docs/2.x/deployment/deployment-pm2\">Nuxt 官网 - 使用 PM2 部署 Nuxt</a> </li>\n<li><a href=\"https://www.npmjs.com/package/pm2-windows-startup\">pm2-windows-startup - npm</a> </li>\n<li><a href=\"https://segmentfault.com/a/1190000014450967\">nuxt.js部署vue应用到服务端过程</a> </li>\n<li><a href=\"https://pm2.keymetrics.io/\">PM2 官网</a> </li>\n</ul>\n<h2 id=\"源码\"><a href=\"#源码\" class=\"headerlink\" title=\"源码\"></a>源码</h2><p>更多细节参考 <a href=\"https://gitee.com/dizuncainiao/nuxt-deploy\">源码</a></p>\n","text":"前言Nuxt.js 是一个基于 Vue.js 的轻量级应用框架,可用来创建服务端渲染 (SSR) 应用，本篇来讲一下 如何使用 PM2 部署 Nuxt 应用。 创建 Nuxt 应用对于如何创建 Nuxt 应用，这里不作赘述，这里建议直接参考 官网 的做法，使用 create-nu...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA-Nuxt-%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">创建 Nuxt 应用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PM2-%E8%BF%9B%E7%A8%8B%E5%AE%88%E6%8A%A4\"><span class=\"toc-text\">PM2-进程守护</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#pm2-windows-startup-%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E5%90%AF%E5%90%8E%E8%87%AA%E5%8A%A8%E6%81%A2%E5%A4%8D-pm2-%E8%BF%9B%E7%A8%8B\"><span class=\"toc-text\">pm2-windows-startup-服务器重启后自动恢复 pm2 进程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">安装</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E6%B3%A8%E5%86%8C%E8%A1%A8%E9%A1%B9\"><span class=\"toc-text\">添加注册表项</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BF%9D%E5%AD%98%E5%BD%93%E5%89%8D%E7%9A%84%E8%BF%9B%E7%A8%8B%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">保存当前的进程列表</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BA%90%E7%A0%81\"><span class=\"toc-text\">源码</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Event Bus","uid":"e27ca51324eb3fbf12d00b0c949efce4","slug":"event-bus","date":"2021-12-23T07:47:51.000Z","updated":"2021-12-24T11:28:21.417Z","comments":true,"path":"api/articles/event-bus.json","keywords":"帝尊菜鸟个人博客，帝尊菜鸟个人网站，web前端，JavaScript，CSS，HTML","cover":[],"text":"前言我们都知道在 Vue 中父子组件通信使用 props、$emit，兄弟组件或者跨组件之间可以通过 Vuex 或 EventBus ，包括 $parent 、$root 和 $refs 都是可以达到通信的目的，总之 Vue 组件之间的通信方式非常丰富。 今天的主角是EventB...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[],"tags":[],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{}}